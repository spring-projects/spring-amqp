<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/rabbit https://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

	<rabbit:queue name="foo" />

	<rabbit:queue name="override" durable="true" auto-delete="true" exclusive="true" />

	<rabbit:queue id="alias" name="spam" />

	<rabbit:queue id="overrideAlias" name="bar" durable="true" auto-delete="true" exclusive="true" />

	<rabbit:queue id="anonymous" />

	<rabbit:queue id="uuidAnon" naming-strategy="uuidNamer" />

	<rabbit:queue id="customAnon" naming-strategy="customNamer" />

	<bean id="uuidNamer" class="org.springframework.amqp.core.UUIDNamingStrategy" />

	<bean id="customNamer" class="org.springframework.amqp.core.Base64UrlNamingStrategy">
		<constructor-arg value="custom.gen-" />
	</bean>

	<util:map id="myRefArguments">
		<beans:entry key="foo" value="bar" />
		<beans:entry key="x-message-ttl">
			<beans:value type="java.lang.Long">200</beans:value>
		</beans:entry>
		<beans:entry key="x-ha-policy" value="all" />
	</util:map>

	<rabbit:queue name="refArguments">
		<rabbit:queue-arguments ref="myRefArguments"/>
	</rabbit:queue>

	<rabbit:queue name="arguments">
		<rabbit:queue-arguments>
			<beans:entry key="foo" value="bar" />
			<beans:entry key="x-message-ttl">
				<beans:value type="java.lang.Long">100</beans:value>
			</beans:entry>
			<beans:entry key="x-ha-policy" value="all" />
		</rabbit:queue-arguments>
	</rabbit:queue>

	<rabbit:queue id="anonymousArguments">
		<rabbit:queue-arguments>
			<beans:entry key="foo" value="spam" />
		</rabbit:queue-arguments>
	</rabbit:queue>

	<rabbit:queue id="anonymousOverride" durable="false" auto-delete="true" exclusive="true" />

	<rabbit:queue-arguments id="topLevelArgs">
		<beans:entry key="baz" value="qux" />
	</rabbit:queue-arguments>

	<rabbit:queue id="referencedArguments" queue-arguments="topLevelArgs" />

	<rabbit:admin id="admin1" auto-startup="false" connection-factory="mockCF" />

	<rabbit:admin id="admin2" auto-startup="false" connection-factory="mockCF" />

	<rabbit:queue id="autoDeclareTwoAdmins" declared-by="admin1, admin2" />

	<rabbit:queue id="autoDeclareOneAdmin" declared-by="  admin1  " />

	<rabbit:queue id="noAutoDeclare" auto-declare="false" />

	<beans:bean id="mockCF" class="org.mockito.Mockito" factory-method="mock">
		<beans:constructor-arg value="org.springframework.amqp.rabbit.connection.ConnectionFactory"
				type="java.lang.Class"/>
	</beans:bean>

</beans>
